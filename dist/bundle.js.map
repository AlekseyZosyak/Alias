{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA,MAAM,mCAAmC;AACzC,MAAM,mCAAmC;AACzC,MAAM,oCAAoC;AAC1C,MAAM,uCAAuC;AAC7C,MAAM,qCAAqC;AAC3C,MAAM,qCAAqC;AAC3C,MAAM,mCAAmC;AACzC,MAAM,qCAAqC;AAC3C,MAAM,qCAAqC;AAC3C,MAAM,uCAAuC;AAC7C,MAAM,mCAAmC;AACzC,MAAM,uCAAuC;AAC7C,MAAM,mCAAmC;AACzC,MAAM,qCAAqC;AAC3C,MAAM,yCAAyC;AAC/C,MAAM,uCAAuC;AAC7C,MAAM,uCAAuC;AAC7C,MAAM,qCAAqC;AAC3C,MAAM,mCAAmC;AACzC,MAAM,8CAA8C;AACpD,MAAM,mCAAmC;AACzC,MAAM,2CAA2C;AACjD,MAAM,yCAAyC;AAC/C,MAAM,qCAAqC;AAC3C,MAAM,mCAAmC;AACzC,MAAM,mCAAmC;AACzC,MAAM,mCAAmC;AACzC,MAAM,6CAA6C;AACnD,MAAM,6CAA6C;AACnD,MAAM,uCAAuC;AAC7C,MAAM,mCAAmC;AACzC,MAAM;AACN;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;ACnCpB;AACA,MAAM,+DAA+D;AACrE,MAAM,oEAAoE;AAC1E,MAAM,oEAAoE;AAC1E,MAAM,qEAAqE;AAC3E,MAAM,qEAAqE;AAC3E,MAAM,qEAAqE;AAC3E,MAAM,mFAAmF;AACzF,MAAM,mFAAmF;AACzF,MAAM;AACN;;AAEA,iEAAe,UAAU;;;;;;;;;;;;;;;ACXzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,iEAAe,oBAAoB,EAAC;;;;;;AAMpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iEAAe,oBAAoB;;;;;;;;;;;;;;;;ACdR;AAC+B;;;AAG1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,0BAA0B,iEAAoB,CAAC,6CAAI;AACnD;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;AAKA,iEAAe,SAAS,EAAC;;;;;;;;UC/DzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACN6B;AACU;AACK;AACyB;AACrB;;AAEhD;;AAEA,QAAQ,8DAAS;AACjB;AACA,IAAI,oDAAU;AACd,QAAQ,mDAAoB,QAAQ,oDAAU,SAAS,oDAAU;AACjqCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,kBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA","sources":["webpack://alias/./js/card.js","webpack://alias/./js/db-cloud.js","webpack://alias/./js/fon.js","webpack://alias/./js/modules/generatorRandomCards.js","webpack://alias/./js/modules/startField.js","webpack://alias/webpack/bootstrap","webpack://alias/webpack/runtime/define property getters","webpack://alias/webpack/runtime/hasOwnProperty shorthand","webpack://alias/webpack/runtime/make namespace object","webpack://alias/./js/script.js"],"sourcesContent":["const card = [\n    { word : 'Cat', img : 'img/Cat.svg' },\n    { word : 'Dog', img : 'img/Dog.svg' },\n    { word : 'Frog', img : 'img/Frog.svg'},\n    { word : 'Horse', img : 'img/Horse.svg' },\n    { word : 'Wolf', img : 'img/Wolf.svg' },\n    { word : 'Duck', img : 'img/Duck.svg' },\n    { word : 'Fox', img : 'img/Fox.svg' },\n    { word : 'Lion', img : 'img/Lion.svg' },\n    { word : 'Fish', img : 'img/Fish.svg' },\n    { word : 'Tiger', img : 'img/Tiger.svg' },\n    { word : 'Pig', img : 'img/Pig.svg' },\n    { word : 'Mouse', img : 'img/Mouse.svg' },\n    { word : 'Ant', img : 'img/Ant.svg' },\n    { word : 'Bear', img : 'img/Bear.svg' },\n    { word : 'Rabbit', img : 'img/Rabbit.svg' },\n    { word : 'Snake', img : 'img/Snake.svg' },\n    { word : 'Apple', img : 'img/Apple.svg' },\n    { word : 'Pear', img : 'img/Pear.svg' },\n    { word : 'Bee', img : 'img/Bee.svg' },\n    { word : 'Ice cream', img : 'img/IceCream.svg' },\n    { word : 'Egg', img : 'img/Egg.svg' },\n    { word : 'Cupcake', img : 'img/Cupcake.svg' },\n    { word : 'Banana', img : 'img/Banana.svg' },\n    { word : 'Ball', img : 'img/Ball.svg' },\n    { word : 'Car', img : 'img/Car.svg' },\n    { word : 'Ice', img : 'img/Ice.svg' },\n    { word : 'Key', img : 'img/Key.svg' },\n    { word : 'Mushroom', img : 'img/Mushroom.svg' },\n    { word : 'Umbrella', img : 'img/Umbrella.svg' },\n    { word : 'Train', img : 'img/Train.svg' },\n    { word : 'Leg', img : 'img/Leg.svg' },\n    { word : 'Hand', img : 'img/Hand.svg' }\n];\n\nexport default card;\n","const elementImg = [\n    { name: 'ball', src: 'fon/ball.svg', selector: ['ball', 'mode'] },\n    { name: 'cloud1', src: 'fon/left1.svg', selector: ['cloud1', 'mode'] },\n    { name: 'cloud2', src: 'fon/left2.svg', selector: ['cloud2', 'mode'] },\n    { name: 'cloud3', src: 'fon/right3.svg', selector: ['cloud3', 'mode'] },\n    { name: 'cloud4', src: 'fon/right4.svg', selector: ['cloud4', 'mode'] },\n    { name: 'cloud5', src: 'fon/right5.svg', selector: ['cloud5', 'mode'] },\n    { name: 'floor1', src: 'fon/floor1.svg', selector: ['floor1', 'mode', 'mode-floor'] },\n    { name: 'floor2', src: 'fon/floor2.svg', selector: ['floor2', 'mode', 'mode-floor'] },\n    { name: 'floor3', src: 'fon/floor3.svg', selector: ['floor3', 'mode', 'mode-floor'] }\n];\n\nexport default elementImg;","\nfunction createCloudAnimation(teg, src, arraySelectorClass) {\n    const bg = document.querySelector('body');\n    bg.style.backgroundColor = '#C1EFFF';\n\n    const element = document.createElement(teg);\n\n    arraySelectorClass.forEach((item) => {\n        element.classList.add(item);\n    });\n\n    element.src = src;\n    bg.append(element);\n    console.log(element);\n}\n\nexport default createCloudAnimation;\n\n\n\n\n\n// const ball = document.createElement('img');\n// const ballIndex = element[0]['src'];\n//     ball.src = ballIndex;\n//     ball.className = 'ball mode';\n//     FON.append(ball);\n\n// const cloud1 = document.createElement('img');\n// const cloud1Index = element[1]['src'];\n//     cloud1.src = cloud1Index;\n//     cloud1.className = 'cloud1 mode';\n//     FON.append(cloud1);\n\n// const cloud2 = document.createElement('img');\n// const cloud2Index = element[2]['src'];\n//     cloud2.src = cloud2Index;\n//     cloud2.className = 'cloud2 mode';\n//     FON.append(cloud2);\n\n// const cloud3 = document.createElement('img');\n// const cloud3Index = element[3]['src'];\n//     cloud3.src = cloud3Index;\n//     cloud3.className = 'cloud3 mode';\n//     FON.append(cloud3);\n\n// const cloud4 = document.createElement('img');\n// const cloud4Index = element[4]['src'];\n//     cloud4.src = cloud4Index;\n//     cloud4.className = 'cloud4 mode';\n//     FON.append(cloud4);\n\n// const cloud5 = document.createElement('img');\n// const cloud5Index = element[5]['src'];\n//     cloud5.src = cloud5Index;\n//     cloud5.className = 'cloud5 mode';\n//         FON.append(cloud5);\n\n// const floor1 = document.createElement('img');\n// const floor1Index = element[6]['src'];\n//     floor1.src = floor1Index;\n//     floor1.className = 'floor1 mode mode-floor';\n//     FON.append(floor1);\n\n// const floor2 = document.createElement('img');\n// const floor2Index = element[7]['src'];\n//     floor2.src = floor2Index;\n//     floor2.className = 'floor2 mode mode-floor';\n//     FON.append(floor2);\n\n// const floor3 = document.createElement('img');\n// const floor3Index = element[8]['src'];\n//     floor3.src = floor3Index;\n//     floor3.className = 'floor3 mode mode-floor';\n//     FON.append(floor3);\n","\n\nfunction generatorRandomCards(card) {\n    let cardAlias = card[Math.floor(Math.random() * card.length)];\n\n    if (cardAlias == undefined) {\n\n        return oops();\n    };\n\n    return cardAlias;\n    \n};\n\nexport default generatorRandomCards;","import card from \"../card\";\nimport generatorRandomCards from \"./generatorRandomCards\";\n\n\nclass GameField {\n    constructor(parendSelector, tegElement) {\n        this.container = document.querySelector(parendSelector);\n        this.element = document.createElement(tegElement);\n    }\n\n    startMenu() {\n        this.element.classList.add('main-block');\n        this.element.innerHTML = `\n                    <h1 class=\"main-block_title\">Alias</h1>\n                    <button class=\"main-button utilit-btn1\" data-start-game>Start game</button>\n                    <button class=\"main-button utilit-btn2\" data-open>Rules of game</button>`;\n        container.append(this.element);\n\n        document.querySelector('button[data-start-game]').addEventListener('click', () => {\n            this.removeElement();\n            this.startGame();\n        })\n        document.querySelector('button[data-open]').addEventListener('click', () => {\n            this.removeElement();\n            this.openRules();\n        })\n    }\n\n    openRules() {\n        this.element.classList.add('main-block');\n        this.element.innerHTML = `<h2 class=\"rules_title\">Правила игры:</h2> \n            <p class=\"rules_text\">Игрок за 60секунд должен на английском обьяснить другому игроку слово указанное на карточке. Если смог тогда жми кнопку \"YES\", если нет тогда нажимай \"NO\". За каждое отгаданное слово игрок получит 1 балл!!!</p> \n            <button class=\"main-button utilit-btn1\" data-back>back</button>`;\n        container.append(this.element);\n\n        document.querySelector('button[data-back]').addEventListener('click', () => {\n            this.removeElement();\n            this.startMenu();\n        })\n    }\n\n    startGame() {\n        const aliasCard = generatorRandomCards(card);\n        this.element.classList.add('main-block', 'field');\n        this.element.innerHTML = `\n            <span class=\"field_time\" data-time>60</span>\n            <img src=\"${aliasCard.img}\" class=\"img\">\n           \n            <div>\n                <button class=\"answer-button wrong\" id=\"card-false\">No</button>\n                <button class=\"answer-button right\" id=\"card-true\">Yes</button>\n            </div>`;\n        container.append(this.element);\n    }\n\n    removeElement() {\n        this.element.remove();\n    }\n}\n\n\n\n\nexport default GameField;\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import card from './card.js';\nimport elementImg from './db-cloud.js';\nimport createCloudAnimation from './fon.js';\nimport generatorRandomCards from './modules/generatorRandomCards.js';\nimport GameField from './modules/startField.js';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n    new GameField('.container', 'div').startMenu();\n    \n    elementImg.forEach((item, i) => {\n        createCloudAnimation('img', elementImg[i].src, elementImg[i].selector);\n    })\n\n   \n    \n})\n\n    \n    \n    // const mainBlock = document.querySelector('.main-block');\n    // const sectionContainer = document.querySelector('.container');\n    \n    // const btnStart = document.querySelector('#start-game');\n    // btnStart.addEventListener('click', startGame);\n    \n    // let rightAnswer = [];\n    // let wrongAnswer = [];\n    // let pointsGame = null;\n    // let word = null;\n    // var cardAlias = null;\n    // let timerID = null;\n    // let second = 20;\n    \n    \n    \n    \n    \n    // // Start game!\n    // function startGame() {  \n    \n    //     gameInfo.remove();\n    //     goBackMenu.remove();\n    //     mainBlock.remove();\n    \n    //     gameField();\n    //     timerID = setInterval(timer, 1000);\n    //     clear();\n    // };\n    \n    // // Random image generation.\n    // function randomImg() {\n        \n    //     cardAlias = card[Math.floor(Math.random() * card.length)];\n    //     if (cardAlias == undefined) {\n    //         field.remove();\n    //         return oops();\n    //     };\n    //     img.src = cardAlias.img;\n    //     word = cardAlias;\n        \n    // };\n    \n    // const time = document.createElement('div');\n    // const img = document.createElement('img');\n    // const field = document.createElement('div');\n    // const flexBtn = document.createElement('div');\n    // const btnNo = document.createElement('button');\n    // const btnYes = document.createElement('button');\n    \n    // function gameField() {\n        \n    //     field.className = 'main-block field';\n    //     time.className = 'field_time';\n    //     time.innerHTML = '<span data-time>60</span>';\n    //     field.append(time);\n        \n    //         randomImg();\n    //         img.className = \"img\";\n    //         field.append(img);   \n    \n    //         flexBtn.className = 'field_flexBtn';\n    //         field.append(flexBtn);\n        \n    //         btnNo.className = 'answer-button wrong';\n    //         btnNo.id = 'card-false';\n    //         btnNo.textContent = 'No';\n    //         flexBtn.append(btnNo);\n        \n    //         btnYes.className = 'answer-button right';\n    //         btnYes.id = 'card-true';\n    //         btnYes.textContent = 'Yes';\n    //         flexBtn.append(btnYes);\n    //         sectionContainer.append(field);\n    \n    //     const throwOutBTN = document.querySelector('#card-false');\n    //     throwOutBTN.addEventListener('click', throwOutCard);\n    //     const nextBTN = document.querySelector('#card-true');\n    //     nextBTN.addEventListener('click', nextCard); \n    \n    // };\n    \n    // // Сorrect answer and new card. guessed right\n    // function nextCard() {\n        \n    //     pointsGame += 1;\n    //     rightAnswer.push(word.word);  \n    \n    //         let deletIndex = card.indexOf(word);\n    //         card.splice(deletIndex, 1);\n    \n    //     if( second === 0 ) {\n    //         stopGame();\n    //     };\n        \n    //     randomImg();\n        \n    // }; \n    \n    // // Wrong answer and new card.\n    // function throwOutCard() {\n        \n    //     wrongAnswer.push(word.word);\n    \n    //         let deletIndex = card.indexOf(word);\n    //         card.splice(deletIndex, 1);\n            \n    \n    //     if( second === 0 ) {\n    //         stopGame();\n    //     };\n    \n    //     randomImg();\n    // };\n    \n    \n    // // stop game and result output.\n    // const gameInfo = document.createElement('div');\n    \n    // function stopGame() {\n        \n    //     stopTimer();\n    //     field.remove();\n    \n    //     const rightAnswerResult = rightAnswer.join(', ');\n    //     const wrongAnswerResult = wrongAnswer.join(', ');\n    \n    //         gameInfo.className = 'answer_block';\n    //         gameInfo.innerHTML = '<h2 class=\"answer_title\">Общий бал :&nbsp&nbsp&nbsp<span class=\"answer_points\"></span></h2>';\n    //         sectionContainer.append(gameInfo);\n        \n    //     let points = document.querySelector('.answer_points');\n    //         points.innerText = `${pointsGame}`;\n       \n    //     const answerElementYes = document.createElement('div');\n    //         answerElementYes.className = 'answer_part';\n    //         answerElementYes.innerText = 'Отгаданние слова : ';\n    //         gameInfo.append(answerElementYes);\n    //         const elementYes = document.createElement('span');\n    //             elementYes.className = 'answer_out-right';\n    //             elementYes.innerText = `${rightAnswerResult}`;\n    //             answerElementYes.append(elementYes);\n    \n    //     const answerElementNo = document.createElement('div');\n    //         answerElementNo.className = 'answer_part';\n    //         answerElementNo.innerText = 'Не отгаданные слова : ';\n    //         gameInfo.append(answerElementNo);\n    //         const elementNo = document.createElement('span');\n    //             elementNo.className = 'answer_out-wrong';\n    //             elementNo.innerText = `${wrongAnswerResult}`;\n    //             answerElementNo.append(elementNo);\n        \n    //     const flexBtn2 = document.createElement('div');\n    //         flexBtn2.className = 'answer_flexBtn';\n    //         gameInfo.append(flexBtn2);\n    \n    //     const btnNewGame = document.createElement('button');\n    //         btnNewGame.id = 'NewGame';\n    //         btnNewGame.className = 'main-button utilit-btn1';\n    //         btnNewGame.innerText = 'New game';\n    //         flexBtn2.append(btnNewGame);\n    //             const newGame = document.querySelector('#NewGame');\n    //             newGame.addEventListener('click', startGame);\n    \n    //     const btnBackMenu = document.createElement('button');\n    //         btnBackMenu.id = 'BackMenu';\n    //         btnBackMenu.className = 'main-button utilit-btn2';\n    //         btnBackMenu.innerText = 'Back menu';\n    //         flexBtn2.append(btnBackMenu);\n    //             const BackMenu = document.querySelector('#BackMenu');\n    //             BackMenu.addEventListener('click', back);\n    // };\n    \n    // const goBackMenu = document.createElement('div');\n    // function back() {\n    \n    //     error.remove();\n    //     gameInfo.remove();\n        \n    \n    //     goBackMenu.className = 'main-block';\n    //     goBackMenu.innerHTML = '<h1 class=\"main-block_title\">Alias</h1><button class=\"main-button utilit-btn1\" id=\"start-game\">Start game</button><button class=\"main-button utilit-btn2\" data-open>Rules of game</button>';\n    //     sectionContainer.append(goBackMenu);\n    \n    //     const btnStart = document.querySelector('#start-game');\n    //         btnStart.addEventListener('click', startGame);\n    \n    //     const btnRules = document.querySelector('button[data-open]');\n    //         btnRules.addEventListener(\"click\", openRules);\n    \n    // }; \n    // export default goBackMenu;\n    \n    \n    // // Start timer in the game.\n    // function timer() {\n    //     const outTime = document.querySelector('span[data-time]');\n    \n    //     if ( second > 0 ) {\n    //         second -= 1;\n    //         outTime.textContent = second;\n    //     } else {\n    //         outTime.textContent = \"finish\";\n    //     };\n    // };\n    // // Resetting timer.\n    // function stopTimer() {\n    //    clearInterval(timerID);\n    //    second = 15;\n    // };\n    \n    // function clear() {\n    //     pointsGame = 0;\n    //     rightAnswer = [];\n    //     wrongAnswer = [];\n    // };\n    \n\n\n\n\n    // const error = document.createElement('div');\n    // const oops = function () {\n    //     stopTimer();\n    //         error.className = 'error';\n    //         error.innerHTML = '<h1 class=\"error_title\">ERROR!</h1><p class=\"error_text\">Эй, зачем ты со сной так? зачем так клацать? Я начинающий программис и все баги пофиксить не успел </p>';\n    //         sectionContainer.append(error)\n    //     const errorBtn = document.createElement('button');\n    //         errorBtn.className = 'error_button main-button';\n    //         errorBtn.textContent = 'Давай начнем все с начала'\n    //         error.append(errorBtn);\n    //     errorBtn.addEventListener('click', function() {\n    //         back();\n    //         gameInfo.remove();\n    //         location.reload();\n    //     });\n    // };\n    \n\n\n\n\n"],"names":[],"sourceRoot":""}