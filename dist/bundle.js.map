{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAqC;;AAErC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,kDAAU;AACd;;AAEA;AACA;AACA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;ACjCxB;AACA,MAAM,mCAAmC;AACzC,MAAM,mCAAmC;AACzC,MAAM,oCAAoC;AAC1C,MAAM,uCAAuC;AAC7C,MAAM,qCAAqC;AAC3C,MAAM,qCAAqC;AAC3C,MAAM,mCAAmC;AACzC,MAAM,qCAAqC;AAC3C,MAAM,qCAAqC;AAC3C,MAAM,uCAAuC;AAC7C,MAAM,mCAAmC;AACzC,MAAM,uCAAuC;AAC7C,MAAM,mCAAmC;AACzC,MAAM,qCAAqC;AAC3C,MAAM,yCAAyC;AAC/C,MAAM,uCAAuC;AAC7C,MAAM,uCAAuC;AAC7C,MAAM,qCAAqC;AAC3C,MAAM,mCAAmC;AACzC,MAAM,8CAA8C;AACpD,MAAM,mCAAmC;AACzC,MAAM,2CAA2C;AACjD,MAAM,yCAAyC;AAC/C,MAAM,qCAAqC;AAC3C,MAAM,mCAAmC;AACzC,MAAM,mCAAmC;AACzC,MAAM,mCAAmC;AACzC,MAAM,6CAA6C;AACnD,MAAM,6CAA6C;AACnD,MAAM,uCAAuC;AAC7C,MAAM,mCAAmC;AACzC,MAAM;AACN;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;ACnCpB;AACA,MAAM,iEAAiE;AACvE,MAAM,oEAAoE;AAC1E,MAAM,oEAAoE;AAC1E,MAAM,qEAAqE;AAC3E,MAAM,qEAAqE;AAC3E,MAAM,qEAAqE;AAC3E,MAAM,mFAAmF;AACzF,MAAM,mFAAmF;AACzF,MAAM;AACN;;AAEA,iEAAe,UAAU;;;;;;;;;;;;;;;ACXzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA,iEAAe,oBAAoB,EAAC;;;;;;AAMpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACzE6B;AACY;AACF;AACK;;;AAG5C,oDAAU;AACV,IAAI,mDAAoB,QAAQ,oDAAU,SAAS,oDAAU;AAC7D,CAAC;;;;AAID;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,gDAAI,4BAA4B,gDAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,gDAAI;AAC7B,QAAQ,gDAAI;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,gDAAI;AAC7B,QAAQ,gDAAI;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,uDAAS;;AAEpD;AACA,iEAAe,UAAU,EAAC;;;AAG1B;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;UCpPA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://alias/./js/RulesOfGame.js","webpack://alias/./js/card.js","webpack://alias/./js/db-cloud.js","webpack://alias/./js/fon.js","webpack://alias/./js/script.js","webpack://alias/webpack/bootstrap","webpack://alias/webpack/runtime/define property getters","webpack://alias/webpack/runtime/hasOwnProperty shorthand","webpack://alias/webpack/runtime/make namespace object","webpack://alias/webpack/before-startup","webpack://alias/webpack/startup","webpack://alias/webpack/after-startup"],"sourcesContent":["import goBackMenu from \"./script.js\";\n\nconst btnRules = document.querySelector('button[data-open]');\nbtnRules.addEventListener(\"click\", openRules);\n\nconst sectionContainer = document.querySelector('.container');\nconst mainBlock = document.querySelector('.main-block');\n\nconst newBlock = document.createElement('div');\n\nfunction openRules() {\n    \n        newBlock.className = 'main-block';\n        newBlock.innerHTML = '<h2 class=\"rules_title\">Правила игры:</h2> <p class=\"rules_text\">Игрок за 60секунд должен на английском обьяснить другому игроку слово указанное на карточке. Если смог тогда жми кнопку \"YES\", если нет тогда нажимай \"NO\". За каждое отгаданное слово игрок получит 1 балл!!!</p> <button class=\"main-button utilit-btn1\" data-back>back</button>';\n        sectionContainer.append(newBlock);\n\n    deletAlias();\n\n    const btnBack = document.querySelector('button[data-back]');\n    btnBack.addEventListener('click', back);\n    console.log(btnBack);\n};\n\nfunction deletAlias() {\n    mainBlock.remove();\n    goBackMenu.remove();\n};\n\nfunction back() {\n    newBlock.remove();\n    sectionContainer.append(mainBlock);\n};\n\nexport default openRules;","const card = [\n    { word : 'Cat', img : 'img/Cat.svg' },\n    { word : 'Dog', img : 'img/Dog.svg' },\n    { word : 'Frog', img : 'img/Frog.svg'},\n    { word : 'Horse', img : 'img/Horse.svg' },\n    { word : 'Wolf', img : 'img/Wolf.svg' },\n    { word : 'Duck', img : 'img/Duck.svg' },\n    { word : 'Fox', img : 'img/Fox.svg' },\n    { word : 'Lion', img : 'img/Lion.svg' },\n    { word : 'Fish', img : 'img/Fish.svg' },\n    { word : 'Tiger', img : 'img/Tiger.svg' },\n    { word : 'Pig', img : 'img/Pig.svg' },\n    { word : 'Mouse', img : 'img/Mouse.svg' },\n    { word : 'Ant', img : 'img/Ant.svg' },\n    { word : 'Bear', img : 'img/Bear.svg' },\n    { word : 'Rabbit', img : 'img/Rabbit.svg' },\n    { word : 'Snake', img : 'img/Snake.svg' },\n    { word : 'Apple', img : 'img/Apple.svg' },\n    { word : 'Pear', img : 'img/Pear.svg' },\n    { word : 'Bee', img : 'img/Bee.svg' },\n    { word : 'Ice cream', img : 'img/IceCream.svg' },\n    { word : 'Egg', img : 'img/Egg.svg' },\n    { word : 'Cupcake', img : 'img/Cupcake.svg' },\n    { word : 'Banana', img : 'img/Banana.svg' },\n    { word : 'Ball', img : 'img/Ball.svg' },\n    { word : 'Car', img : 'img/Car.svg' },\n    { word : 'Ice', img : 'img/Ice.svg' },\n    { word : 'Key', img : 'img/Key.svg' },\n    { word : 'Mushroom', img : 'img/Mushroom.svg' },\n    { word : 'Umbrella', img : 'img/Umbrella.svg' },\n    { word : 'Train', img : 'img/Train.svg' },\n    { word : 'Leg', img : 'img/Leg.svg' },\n    { word : 'Hand', img : 'img/Hand.svg' }\n];\n\nexport default card;\n","const elementImg = [\n    { name: 'ball', src: './fon/ball.svg', selector: ['ball', 'mode'] },\n    { name: 'cloud1', src: 'fon/left1.svg', selector: ['cloud1', 'mode'] },\n    { name: 'cloud2', src: 'fon/left2.svg', selector: ['cloud2', 'mode'] },\n    { name: 'cloud3', src: 'fon/right3.svg', selector: ['cloud3', 'mode'] },\n    { name: 'cloud4', src: 'fon/right4.svg', selector: ['cloud4', 'mode'] },\n    { name: 'cloud5', src: 'fon/right5.svg', selector: ['cloud5', 'mode'] },\n    { name: 'floor1', src: 'fon/floor1.svg', selector: ['floor1', 'mode', 'mode-floor'] },\n    { name: 'floor2', src: 'fon/floor2.svg', selector: ['floor2', 'mode', 'mode-floor'] },\n    { name: 'floor3', src: 'fon/floor3.svg', selector: ['floor3', 'mode', 'mode-floor'] }\n];\n\nexport default elementImg;","\nfunction createCloudAnimation(teg, src, arraySelectorClass) {\n    const bg = document.querySelector('body');\n    bg.style.backgroundColor = '#C1EFFF';\n\n    const element = document.createElement(teg);\n\n    arraySelectorClass.forEach((item) => {\n        element.classList.add(item);\n    });\n\n    element.src = src;\n    bg.append(element);\n}\n\nexport default createCloudAnimation;\n\n\n\n\n\n// const ball = document.createElement('img');\n// const ballIndex = element[0]['src'];\n//     ball.src = ballIndex;\n//     ball.className = 'ball mode';\n//     FON.append(ball);\n\n// const cloud1 = document.createElement('img');\n// const cloud1Index = element[1]['src'];\n//     cloud1.src = cloud1Index;\n//     cloud1.className = 'cloud1 mode';\n//     FON.append(cloud1);\n\n// const cloud2 = document.createElement('img');\n// const cloud2Index = element[2]['src'];\n//     cloud2.src = cloud2Index;\n//     cloud2.className = 'cloud2 mode';\n//     FON.append(cloud2);\n\n// const cloud3 = document.createElement('img');\n// const cloud3Index = element[3]['src'];\n//     cloud3.src = cloud3Index;\n//     cloud3.className = 'cloud3 mode';\n//     FON.append(cloud3);\n\n// const cloud4 = document.createElement('img');\n// const cloud4Index = element[4]['src'];\n//     cloud4.src = cloud4Index;\n//     cloud4.className = 'cloud4 mode';\n//     FON.append(cloud4);\n\n// const cloud5 = document.createElement('img');\n// const cloud5Index = element[5]['src'];\n//     cloud5.src = cloud5Index;\n//     cloud5.className = 'cloud5 mode';\n//         FON.append(cloud5);\n\n// const floor1 = document.createElement('img');\n// const floor1Index = element[6]['src'];\n//     floor1.src = floor1Index;\n//     floor1.className = 'floor1 mode mode-floor';\n//     FON.append(floor1);\n\n// const floor2 = document.createElement('img');\n// const floor2Index = element[7]['src'];\n//     floor2.src = floor2Index;\n//     floor2.className = 'floor2 mode mode-floor';\n//     FON.append(floor2);\n\n// const floor3 = document.createElement('img');\n// const floor3Index = element[8]['src'];\n//     floor3.src = floor3Index;\n//     floor3.className = 'floor3 mode mode-floor';\n//     FON.append(floor3);\n","import card from './card.js';\nimport openRules from './RulesOfGame.js';\nimport elementImg from './db-cloud.js';\nimport createCloudAnimation from './fon.js';\n\n\nelementImg.forEach((item, i) => {\n    createCloudAnimation('img', elementImg[i].src, elementImg[i].selector);\n})\n\n\n\nconst mainBlock = document.querySelector('.main-block');\nconst sectionContainer = document.querySelector('.container');\n\nconst btnStart = document.querySelector('#start-game');\nbtnStart.addEventListener('click', startGame);\n\nlet rightAnswer = [];\nlet wrongAnswer = [];\nlet pointsGame = null;\nlet word = null;\nvar cardAlias = null;\nlet timerID = null;\nlet second = 20;\n\n\n\n\n\n// Start game!\nfunction startGame() {  \n\n    gameInfo.remove();\n    goBackMenu.remove();\n    mainBlock.remove();\n\n    gameField();\n    timerID = setInterval(timer, 1000);\n    clear();\n};\n\n// Random image generation.\nfunction randomImg() {\n    \n    cardAlias = card[Math.floor(Math.random() * card.length)];\n    if (cardAlias == undefined) {\n        field.remove();\n        return oops();\n    };\n    img.src = cardAlias.img;\n    word = cardAlias;\n    \n};\n\nconst time = document.createElement('div');\nconst img = document.createElement('img');\nconst field = document.createElement('div');\nconst flexBtn = document.createElement('div');\nconst btnNo = document.createElement('button');\nconst btnYes = document.createElement('button');\n\nfunction gameField() {\n    \n    field.className = 'main-block field';\n    time.className = 'field_time';\n    time.innerHTML = '<span data-time>60</span>';\n    field.append(time);\n    \n        randomImg();\n        img.className = \"img\";\n        field.append(img);   \n\n        flexBtn.className = 'field_flexBtn';\n        field.append(flexBtn);\n    \n        btnNo.className = 'answer-button wrong';\n        btnNo.id = 'card-false';\n        btnNo.textContent = 'No';\n        flexBtn.append(btnNo);\n    \n        btnYes.className = 'answer-button right';\n        btnYes.id = 'card-true';\n        btnYes.textContent = 'Yes';\n        flexBtn.append(btnYes);\n        sectionContainer.append(field);\n\n    const throwOutBTN = document.querySelector('#card-false');\n    throwOutBTN.addEventListener('click', throwOutCard);\n    const nextBTN = document.querySelector('#card-true');\n    nextBTN.addEventListener('click', nextCard); \n\n};\n\n// Сorrect answer and new card. guessed right\nfunction nextCard() {\n    \n    pointsGame += 1;\n    rightAnswer.push(word.word);  \n\n        let deletIndex = card.indexOf(word);\n        card.splice(deletIndex, 1);\n\n    if( second === 0 ) {\n        stopGame();\n    };\n    \n    randomImg();\n    \n}; \n\n// Wrong answer and new card.\nfunction throwOutCard() {\n    \n    wrongAnswer.push(word.word);\n\n        let deletIndex = card.indexOf(word);\n        card.splice(deletIndex, 1);\n        \n\n    if( second === 0 ) {\n        stopGame();\n    };\n\n    randomImg();\n};\n\n\n// stop game and result output.\nconst gameInfo = document.createElement('div');\n\nfunction stopGame() {\n    \n    stopTimer();\n    field.remove();\n\n    const rightAnswerResult = rightAnswer.join(', ');\n    const wrongAnswerResult = wrongAnswer.join(', ');\n\n        gameInfo.className = 'answer_block';\n        gameInfo.innerHTML = '<h2 class=\"answer_title\">Общий бал :&nbsp&nbsp&nbsp<span class=\"answer_points\"></span></h2>';\n        sectionContainer.append(gameInfo);\n    \n    let points = document.querySelector('.answer_points');\n        points.innerText = `${pointsGame}`;\n   \n    const answerElementYes = document.createElement('div');\n        answerElementYes.className = 'answer_part';\n        answerElementYes.innerText = 'Отгаданние слова : ';\n        gameInfo.append(answerElementYes);\n        const elementYes = document.createElement('span');\n            elementYes.className = 'answer_out-right';\n            elementYes.innerText = `${rightAnswerResult}`;\n            answerElementYes.append(elementYes);\n\n    const answerElementNo = document.createElement('div');\n        answerElementNo.className = 'answer_part';\n        answerElementNo.innerText = 'Не отгаданные слова : ';\n        gameInfo.append(answerElementNo);\n        const elementNo = document.createElement('span');\n            elementNo.className = 'answer_out-wrong';\n            elementNo.innerText = `${wrongAnswerResult}`;\n            answerElementNo.append(elementNo);\n    \n    const flexBtn2 = document.createElement('div');\n        flexBtn2.className = 'answer_flexBtn';\n        gameInfo.append(flexBtn2);\n\n    const btnNewGame = document.createElement('button');\n        btnNewGame.id = 'NewGame';\n        btnNewGame.className = 'main-button utilit-btn1';\n        btnNewGame.innerText = 'New game';\n        flexBtn2.append(btnNewGame);\n            const newGame = document.querySelector('#NewGame');\n            newGame.addEventListener('click', startGame);\n\n    const btnBackMenu = document.createElement('button');\n        btnBackMenu.id = 'BackMenu';\n        btnBackMenu.className = 'main-button utilit-btn2';\n        btnBackMenu.innerText = 'Back menu';\n        flexBtn2.append(btnBackMenu);\n            const BackMenu = document.querySelector('#BackMenu');\n            BackMenu.addEventListener('click', back);\n};\n\nconst goBackMenu = document.createElement('div');\nfunction back() {\n\n    error.remove();\n    gameInfo.remove();\n    \n\n    goBackMenu.className = 'main-block';\n    goBackMenu.innerHTML = '<h1 class=\"main-block_title\">Alias</h1><button class=\"main-button utilit-btn1\" id=\"start-game\">Start game</button><button class=\"main-button utilit-btn2\" data-open>Rules of game</button>';\n    sectionContainer.append(goBackMenu);\n\n    const btnStart = document.querySelector('#start-game');\n        btnStart.addEventListener('click', startGame);\n\n    const btnRules = document.querySelector('button[data-open]');\n        btnRules.addEventListener(\"click\", openRules);\n\n}; \nexport default goBackMenu;\n\n\n// Start timer in the game.\nfunction timer() {\n    const outTime = document.querySelector('span[data-time]');\n\n    if ( second > 0 ) {\n        second -= 1;\n        outTime.textContent = second;\n    } else {\n        outTime.textContent = \"finish\";\n    };\n};\n// Resetting timer.\nfunction stopTimer() {\n   clearInterval(timerID);\n   second = 15;\n};\n\nfunction clear() {\n    pointsGame = 0;\n    rightAnswer = [];\n    wrongAnswer = [];\n};\n\nconst error = document.createElement('div');\nconst oops = function () {\n    stopTimer();\n        error.className = 'error';\n        error.innerHTML = '<h1 class=\"error_title\">ERROR!</h1><p class=\"error_text\">Эй, зачем ты со сной так? зачем так клацать? Я начинающий программис и все баги пофиксить не успел </p>';\n        sectionContainer.append(error)\n    const errorBtn = document.createElement('button');\n        errorBtn.className = 'error_button main-button';\n        errorBtn.textContent = 'Давай начнем все с начала'\n        error.append(errorBtn);\n    errorBtn.addEventListener('click', function() {\n        back();\n        gameInfo.remove();\n        location.reload();\n    });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./js/script.js\");\n",""],"names":[],"sourceRoot":""}